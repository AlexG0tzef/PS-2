/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 4000000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 23.529;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("code")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("code[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("code_updated")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|out_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ID")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Num_Lock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Scroll_Lock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Set_Delay_Rate")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Set_Delay_Rate[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Set_Delay_Rate";
}

SIGNAL("Set_Delay_Rate[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Set_Delay_Rate";
}

SIGNAL("Set_Delay_Rate[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Set_Delay_Rate";
}

SIGNAL("Set_Delay_Rate[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Set_Delay_Rate";
}

SIGNAL("Set_Delay_Rate[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Set_Delay_Rate";
}

SIGNAL("Set_Delay_Rate[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Set_Delay_Rate";
}

SIGNAL("Set_Delay_Rate[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Set_Delay_Rate";
}

SIGNAL("Set_Delay_Rate[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Set_Delay_Rate";
}

SIGNAL("Caps_Lock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Update_Set_Delay_Rate")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|ps2_beasy")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|write_update")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|brain_state.00000000")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|brain_state.00000001")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|brain_state.00000010")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|brain_state.00000011")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|brain_state.00000100")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|brain_state.00000101")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|brain_state.00000110")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|brain_state.00000111")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_brain:inst|brain_state.00001000")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00001110")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00001111")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00010000")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00010001")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00010010")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00010011")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00010100")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00010101")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00010110")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00010111")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00011000")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00011001")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00011010")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00011011")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00011100")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("ps2_keyboard:inst6|state.00011101")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

TRANSITION_LIST("code[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("code[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("code[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("code[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("code[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("code[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("code[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("code[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21.25;
		LEVEL 1 FOR 21.25;
		NODE
		{
			REPEAT = 20124;
			LEVEL 0 FOR 21.25;
			LEVEL 1 FOR 21.25;
		}
		LEVEL 0 FOR 21.25;
		LEVEL 1 FOR 21.25;
		NODE
		{
			REPEAT = 1416;
			LEVEL 0 FOR 21.25;
			LEVEL 1 FOR 21.25;
		}
		LEVEL 0 FOR 21.25;
		LEVEL 1 FOR 21.25;
		LEVEL 0 FOR 21.25;
		LEVEL 1 FOR 21.25;
		NODE
		{
			REPEAT = 282;
			LEVEL 0 FOR 21.25;
			LEVEL 1 FOR 21.25;
		}
		LEVEL 0 FOR 21.25;
		LEVEL 1 FOR 21.25;
		NODE
		{
			REPEAT = 72290;
			LEVEL 0 FOR 21.25;
			LEVEL 1 FOR 21.25;
		}
		LEVEL 0 FOR 21.25;
		LEVEL 1 FOR 6.25;
	}
}

TRANSITION_LIST("code_updated")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4000000.0;
	}
}

TRANSITION_LIST("data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 36140.544;
		LEVEL 0 FOR 60234.24;
		LEVEL 1 FOR 240936.96;
		LEVEL 0 FOR 88986.719;
		LEVEL 1 FOR 248325.025;
		LEVEL 0 FOR 72281.088;
		LEVEL 1 FOR 3253095.424;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|out_clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ID")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 963747.84;
			LEVEL 1 FOR 6918.826;
			LEVEL 0 FOR 3029333.334;
		}
	}
}

TRANSITION_LIST("Num_Lock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Scroll_Lock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Set_Delay_Rate[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Set_Delay_Rate[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Set_Delay_Rate[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Set_Delay_Rate[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Set_Delay_Rate[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Set_Delay_Rate[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Set_Delay_Rate[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Set_Delay_Rate[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Caps_Lock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("Update_Set_Delay_Rate")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 36140.544;
			LEVEL 0 FOR 40305.177;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 40975.036;
			LEVEL 0 FOR 47.058;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 70.587;
				LEVEL 0 FOR 117.645;
				LEVEL 1 FOR 23.529;
				LEVEL 0 FOR 117.645;
				LEVEL 1 FOR 47.058;
				LEVEL 0 FOR 141.174;
				LEVEL 1 FOR 94.116;
				LEVEL 0 FOR 59.54;
				LEVEL 1 FOR 81.634;
			}
			LEVEL 0 FOR 40352.235;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 39563.296;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 47.058;
				NODE
				{
					REPEAT = 1;
					LEVEL 1 FOR 70.587;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 23.529;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 47.058;
					LEVEL 0 FOR 141.174;
					LEVEL 1 FOR 94.116;
					LEVEL 0 FOR 59.54;
					LEVEL 1 FOR 81.634;
				}
			}
			LEVEL 0 FOR 41763.975;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 38810.368;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 47.058;
				NODE
				{
					REPEAT = 1;
					LEVEL 1 FOR 70.587;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 23.529;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 47.058;
					LEVEL 0 FOR 141.174;
					LEVEL 1 FOR 94.116;
					LEVEL 0 FOR 59.54;
					LEVEL 1 FOR 81.634;
				}
			}
			LEVEL 0 FOR 41011.047;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 39563.296;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 47.058;
				NODE
				{
					REPEAT = 1;
					LEVEL 1 FOR 70.587;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 23.529;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 47.058;
					LEVEL 0 FOR 141.174;
					LEVEL 1 FOR 94.116;
					LEVEL 0 FOR 59.54;
					LEVEL 1 FOR 81.634;
				}
			}
			LEVEL 0 FOR 40676.334;
			LEVEL 1 FOR 41000.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 41000.0;
				LEVEL 1 FOR 41000.0;
			}
			LEVEL 0 FOR 40574.61;
			LEVEL 1 FOR 70.587;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 48473.008;
			LEVEL 0 FOR 41000.0;
			LEVEL 1 FOR 146467.977;
			LEVEL 0 FOR 85240.912;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 40975.036;
			LEVEL 0 FOR 47.058;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 70.587;
				LEVEL 0 FOR 117.645;
				LEVEL 1 FOR 23.529;
				LEVEL 0 FOR 117.645;
				LEVEL 1 FOR 47.058;
				LEVEL 0 FOR 141.174;
				LEVEL 1 FOR 94.116;
				LEVEL 0 FOR 59.54;
				LEVEL 1 FOR 81.634;
			}
			LEVEL 0 FOR 40352.235;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 39563.296;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 47.058;
				NODE
				{
					REPEAT = 1;
					LEVEL 1 FOR 70.587;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 23.529;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 47.058;
					LEVEL 0 FOR 141.174;
					LEVEL 1 FOR 94.116;
					LEVEL 0 FOR 59.54;
					LEVEL 1 FOR 81.634;
				}
			}
			LEVEL 0 FOR 41763.975;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 38810.368;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 47.058;
				NODE
				{
					REPEAT = 1;
					LEVEL 1 FOR 70.587;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 23.529;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 47.058;
					LEVEL 0 FOR 141.174;
					LEVEL 1 FOR 94.116;
					LEVEL 0 FOR 59.54;
					LEVEL 1 FOR 81.634;
				}
			}
			LEVEL 0 FOR 41011.047;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 39563.296;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 47.058;
				NODE
				{
					REPEAT = 1;
					LEVEL 1 FOR 70.587;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 23.529;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 47.058;
					LEVEL 0 FOR 141.174;
					LEVEL 1 FOR 94.116;
					LEVEL 0 FOR 59.54;
					LEVEL 1 FOR 81.634;
				}
			}
			LEVEL 0 FOR 40676.334;
			LEVEL 1 FOR 41000.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 41000.0;
				LEVEL 1 FOR 41000.0;
			}
			LEVEL 0 FOR 40574.61;
			LEVEL 1 FOR 70.587;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 48473.008;
			LEVEL 0 FOR 49869.028;
			LEVEL 1 FOR 46505.756;
			LEVEL 0 FOR 49869.028;
			LEVEL 1 FOR 46505.756;
			LEVEL 0 FOR 49869.028;
			LEVEL 1 FOR 155177.101;
			LEVEL 0 FOR 67662.76;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 40975.036;
			LEVEL 0 FOR 47.058;
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 70.587;
				LEVEL 0 FOR 117.645;
				LEVEL 1 FOR 23.529;
				LEVEL 0 FOR 117.645;
				LEVEL 1 FOR 47.058;
				LEVEL 0 FOR 141.174;
				LEVEL 1 FOR 94.116;
				LEVEL 0 FOR 59.54;
				LEVEL 1 FOR 81.634;
			}
			LEVEL 0 FOR 40352.235;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 39563.296;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 47.058;
				NODE
				{
					REPEAT = 1;
					LEVEL 1 FOR 70.587;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 23.529;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 47.058;
					LEVEL 0 FOR 141.174;
					LEVEL 1 FOR 94.116;
					LEVEL 0 FOR 59.54;
					LEVEL 1 FOR 81.634;
				}
			}
			LEVEL 0 FOR 41763.975;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 38810.368;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 47.058;
				NODE
				{
					REPEAT = 1;
					LEVEL 1 FOR 70.587;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 23.529;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 47.058;
					LEVEL 0 FOR 141.174;
					LEVEL 1 FOR 94.116;
					LEVEL 0 FOR 59.54;
					LEVEL 1 FOR 81.634;
				}
			}
			LEVEL 0 FOR 41011.047;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 39563.296;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 47.058;
				NODE
				{
					REPEAT = 1;
					LEVEL 1 FOR 70.587;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 23.529;
					LEVEL 0 FOR 117.645;
					LEVEL 1 FOR 47.058;
					LEVEL 0 FOR 141.174;
					LEVEL 1 FOR 94.116;
					LEVEL 0 FOR 59.54;
					LEVEL 1 FOR 81.634;
				}
			}
			LEVEL 0 FOR 40676.334;
			LEVEL 1 FOR 41000.0;
			NODE
			{
				REPEAT = 4;
				LEVEL 0 FOR 41000.0;
				LEVEL 1 FOR 41000.0;
			}
			LEVEL 0 FOR 40574.61;
			LEVEL 1 FOR 70.587;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 23.529;
			LEVEL 0 FOR 117.645;
			LEVEL 1 FOR 47.058;
			LEVEL 0 FOR 141.174;
			LEVEL 1 FOR 94.116;
			LEVEL 0 FOR 59.54;
			LEVEL 1 FOR 48473.008;
			LEVEL 0 FOR 49869.028;
			LEVEL 1 FOR 46505.756;
			LEVEL 0 FOR 49869.028;
			LEVEL 1 FOR 46505.756;
			LEVEL 0 FOR 49869.028;
			LEVEL 1 FOR 580080.668;
			LEVEL 0 FOR 446.464;
		}
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|ps2_beasy")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|write_update")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|brain_state.00000000")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|brain_state.00000001")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|brain_state.00000010")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|brain_state.00000011")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|brain_state.00000100")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|brain_state.00000101")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|brain_state.00000110")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|brain_state.00000111")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_brain:inst|brain_state.00001000")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00001110")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00001111")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00010000")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00010001")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00010010")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00010011")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00010100")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00010101")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00010110")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00010111")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00011000")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00011001")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00011010")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00011011")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00011100")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

TRANSITION_LIST("ps2_keyboard:inst6|state.00011101")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 4000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "code_updated";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "code";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "code[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "code[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "code[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "code[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "code[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "code[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "code[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "code[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "ID";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Num_Lock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Scroll_Lock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Caps_Lock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Update_Set_Delay_Rate";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Set_Delay_Rate";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "Set_Delay_Rate[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Set_Delay_Rate[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Set_Delay_Rate[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Set_Delay_Rate[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Set_Delay_Rate[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Set_Delay_Rate[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Set_Delay_Rate[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Set_Delay_Rate[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|out_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|ps2_beasy";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|write_update";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|brain_state.00000000";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|brain_state.00000001";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|brain_state.00000010";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|brain_state.00000011";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|brain_state.00000100";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|brain_state.00000101";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|brain_state.00000110";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|brain_state.00000111";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_brain:inst|brain_state.00001000";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00001110";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00001111";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00010000";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00010001";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00010010";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00010011";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00010100";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00010101";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00010110";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00010111";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00011000";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00011001";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00011010";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00011011";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00011100";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ps2_keyboard:inst6|state.00011101";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
